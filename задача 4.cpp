#include <iostream>
#include <conio.h>
#include <locale>
using namespace std;

    double sumN(double, int, double&);
	double sumE(double, double, int&);

	int main()
	{
		setlocale(LC_ALL, "rus");
		cout << "Вычисление значений функции asin(x)\n\n";
		double x; // значение аргумента
		double func; // точное значение функции
		double sum; // значение частичной суммы
		int n; // число слагаемых в частичной сумме
		int q = 1;

		while (q)
		{
			cout << "\n Введите 1 для запуска, 0 для завершения>";
		    cin >> q;
		if (q!=1) // на случай, если пользователь введет не 1 или 0, а другое число
		{ 
			cout << "Программа завершена";
			return 0;
		}
			cout << "Задание 1" << endl;
			cout << "Введите значение аргумента > ";
			cin >> x;
			cout << "Задайте число слагаемых > ";
			cin >> n;
			func = asin(x); // вычисление "точного" значения
			double last;
			sum = sumN(x, n, last);
			cout << "Точное значение функции равно " << func << endl;
			cout << "Частичная сумма ряда равна " << sum << endl;
			cout << "Абсолютная погрешность равна " << fabs(func - sum) << endl;
			cout << "Последнее слагаемое равно " << last << endl << endl;

			cout << "\nЗадание 2" << endl;
			double E;
			cout << "Введите значение аргумента > ";
			cin >> x;
			cout << "Задайте точность вычислений > ";
			cin >> E;
			func = asin(x); // вычисление "точного" значения
			sum = sumE(x, E, n);
			cout << "Точное значение функции равно " << func << endl;
			cout << "Частичная сумма ряда c заданной точностью равна " << sum << endl;
			cout << "Учтено " << n << " членов ряда" << endl << endl;
			sum = sumE(x, E / 10, n);
			cout << "Частичная сумма ряда c точностью, большей в 10 раз, равна " << sum << endl;
			cout << "Учтено " << n << " членов ряда" << endl;
		}
	}

		double sumN(double x, int n, double& last) // задание 1
		{
			last = x;
			double sum = x; // сразу добавляем в частичную сумму значение аргумента
			double p1=1, p2=1; // добавляем дополнительные переменные для упрощения общей формулы
			for (double i = 1; i < n; i++)
			{
				p1 = p1*(2 * i - 1); // общая формула числителя для произведений нечетных чисел в ряде
				p2 = p2*(2 * i); // общая формула знаменателя для произведений четных чисел в ряде
				last = (p1 / p2) * (pow(x, 2 * i + 1) / (2 * i + 1)); // считаем значение последнего слагаемого ряда с помощью общей формулы ряда
				sum += last; // добавляем значение переменной last к частичной сумме ряда 
			}
			return sum;
		}

		double sumE(double x, double E, int& n) // задание 2
		{
			double last; // инициализация переменной last
			last = x;
			double sum = 0; // в данной строке присваиваем 0 частичной сумме ряда, т.к. мы сравниваем last с E в цикле for
			double p1 = 1, p2 = 1;
			for (n = 1; fabs(last) > E; ++n) // абсолютное значение переменной last должно быть строго больше E
			{
				sum += last; // если значение переменной last строго больше E, то прибавляем его к частичной сумме ряда
				p1 = p1 * (2 * n - 1); // данная формула и ниже сделаны по принципу тех, что из первой функции
				p2 = p2 * 2 * n;
				last = (p1 / p2) * (pow(x, 2 * n + 1) / (2 * n + 1));
			}
			n = n - 1; // последний член ряда не учитывается
			return sum;
		}
	   